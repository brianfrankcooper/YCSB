/**
 * Copyright (c) 2010 Yahoo! Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package com.yahoo.ycsb.generator;

import java.util.ArrayList;
import java.util.List;

import com.yahoo.ycsb.Utils;
import com.yahoo.ycsb.WorkloadException;

/**
 * Generates a distribution by choosing from a discrete set of values.
 */
public class DiscreteGenerator extends Generator {
  private String lastvalue;

  private List<Pair> values;

  public DiscreteGenerator() {
    values = new ArrayList<Pair>();
    lastvalue = null;
  }

  public void addValue(final double weight, final String value) {
    values.add(new Pair(weight, value));
  }

  /**
   * Return the previous string generated by the distribution; e.g., returned
   * from the last nextString() call. Calling lastString() should not advance
   * the distribution or have any side effects. If nextString() has not yet been
   * called, lastString() should return something reasonable.
   */
  @Override
  public String lastString() {
    if (lastvalue == null) {
      lastvalue = nextString();
    }
    return lastvalue;
  }

  /**
   * If the generator returns numeric (integer) values, return the next value as
   * an int. Default is to return -1, which is appropriate for generators that
   * do not return numeric values.
   * 
   * @throws WorkloadException
   *           if this generator does not support integer values
   */
  public int nextInt() throws WorkloadException {
    throw new WorkloadException("DiscreteGenerator does not support nextInt()");
  }

  /**
   * Generate the next string in the distribution.
   */
  @Override
  public String nextString() {
    double sum = 0;

    for (final Pair p : values) {
      sum += p.weight;
    }

    double val = Utils.random().nextDouble();

    for (final Pair p : values) {
      if (val < (p.weight / sum)) {
        return p.value;
      }

      val -= p.weight / sum;
    }

    // should never get here.
    System.out.println("oops. should not get here.");

    System.exit(0);

    return null;
  }

  class Pair {
    private final String value;
    private final double weight;

    Pair(final double weight, final String value) {
      this.weight = weight;
      this.value = value;
    }
  }

}
