<?xml version="1.0"?>
<!-- 
Copyright (c) 2012 - 2016 YCSB contributors. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you
may not use this file except in compliance with the License. You
may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing
permissions and limitations under the License. See accompanying
LICENSE file.
-->

<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration for Hadoop that is based on the sun_checks.xml file
  that is bundled with Checkstyle and includes checks for:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="JavadocPackage"/>

<!--    &lt;!&ndash; Checks whether files end with a new line.                        &ndash;&gt;-->
<!--    &lt;!&ndash; See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile &ndash;&gt;-->
<!--    &lt;!&ndash; module name="NewlineAtEndOfFile"/&ndash;&gt;-->

<!--    &lt;!&ndash; Checks that property files contain the same keys.         &ndash;&gt;-->
<!--    &lt;!&ndash; See http://checkstyle.sf.net/config_misc.html#Translation &ndash;&gt;-->
<!--    <module name="Translation"/>-->

<!--    <module name="FileLength"/>-->
<!--    <module name="FileTabCharacter"/>-->

<!--    <module name="TreeWalker">-->

<!--        &lt;!&ndash; Checks for Javadoc comments.                     &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_javadoc.html &ndash;&gt;-->
<!--        <module name="JavadocType">-->
<!--          <property name="scope" value="public"/>-->
<!--          <property name="allowMissingParamTags" value="true"/>-->
<!--          &lt;!&ndash; unfortunately we cannot add implNote, implSpec, apiNote and apiSpec to checkstyle &ndash;&gt;-->
<!--          <property name="allowUnknownTags" value="true"/>-->
<!--        </module>-->
<!--        <module name="JavadocStyle"/>-->

<!--        &lt;!&ndash; Checks for Naming Conventions.                  &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_naming.html &ndash;&gt;-->
<!--        <module name="ConstantName"/>-->
<!--        <module name="LocalFinalVariableName"/>-->
<!--        <module name="LocalVariableName"/>-->
<!--        <module name="MemberName"/>-->
<!--        <module name="MethodName"/>-->
<!--        <module name="PackageName"/>-->
<!--        <module name="ParameterName"/>-->
<!--        <module name="StaticVariableName"/>-->
<!--        <module name="TypeName"/>-->


<!--        &lt;!&ndash; Checks for Headers                                &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_header.html   &ndash;&gt;-->
<!--        &lt;!&ndash; <module name="Header">                            &ndash;&gt;-->
<!--            &lt;!&ndash; The follow property value demonstrates the ability     &ndash;&gt;-->
<!--            &lt;!&ndash; to have access to ANT properties. In this case it uses &ndash;&gt;-->
<!--            &lt;!&ndash; the ${basedir} property to allow Checkstyle to be run  &ndash;&gt;-->
<!--            &lt;!&ndash; from any directory within a project. See property      &ndash;&gt;-->
<!--            &lt;!&ndash; expansion,                                             &ndash;&gt;-->
<!--            &lt;!&ndash; http://checkstyle.sf.net/config.html#properties        &ndash;&gt;-->
<!--            &lt;!&ndash; <property                                              &ndash;&gt;-->
<!--            &lt;!&ndash;     name="headerFile"                                  &ndash;&gt;-->
<!--            &lt;!&ndash;     value="${basedir}/java.header"/>                   &ndash;&gt;-->
<!--        &lt;!&ndash; </module> &ndash;&gt;-->

<!--        &lt;!&ndash; Following interprets the header file as regular expressions. &ndash;&gt;-->
<!--        &lt;!&ndash; <module name="RegexpHeader"/>                                &ndash;&gt;-->


<!--        &lt;!&ndash; Checks for imports                              &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_import.html &ndash;&gt;-->
<!--        <module name="IllegalImport"/> &lt;!&ndash; defaults to sun.* packages &ndash;&gt;-->
<!--        <module name="RedundantImport"/>-->
<!--        <module name="UnusedImports"/>-->


<!--        &lt;!&ndash; Checks for Size Violations.                    &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_sizes.html &ndash;&gt;-->
<!--        <module name="LineLength">-->
<!--            <property name="max" value="120"/>-->
<!--        </module>-->
<!--        <module name="MethodLength"/>-->
<!--        <module name="ParameterNumber"/>-->


<!--        &lt;!&ndash; Checks for whitespace                               &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_whitespace.html &ndash;&gt;-->
<!--        <module name="EmptyForIteratorPad"/>-->
<!--        <module name="MethodParamPad"/>-->
<!--        <module name="NoWhitespaceAfter"/>-->
<!--        <module name="NoWhitespaceBefore"/>-->
<!--        <module name="ParenPad"/>-->
<!--        <module name="TypecastParenPad"/>-->
<!--        <module name="WhitespaceAfter">-->
<!--	    	<property name="tokens" value="COMMA, SEMI"/>-->
<!--		</module>-->


<!--        &lt;!&ndash; Modifier Checks                                    &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_modifiers.html &ndash;&gt;-->
<!--        <module name="ModifierOrder"/>-->
<!--        <module name="RedundantModifier"/>-->


<!--        &lt;!&ndash; Checks for blocks. You know, those {}'s         &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_blocks.html &ndash;&gt;-->
<!--        <module name="AvoidNestedBlocks"/>-->
<!--        <module name="EmptyBlock">-->
<!--          <property name="option" value="text"/>-->
<!--        </module>-->
<!--        <module name="LeftCurly"/>-->
<!--        <module name="NeedBraces"/>-->
<!--        <module name="RightCurly"/>-->


<!--        &lt;!&ndash; Checks for common coding problems               &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_coding.html &ndash;&gt;-->
<!--        &lt;!&ndash; module name="AvoidInlineConditionals"/&ndash;&gt;-->
<!--        <module name="EmptyStatement"/>-->
<!--        <module name="EqualsHashCode"/>-->
<!--        <module name="HiddenField">-->
<!--          <property name="ignoreConstructorParameter" value="true"/>-->
<!--        </module>-->
<!--        <module name="IllegalInstantiation"/>-->
<!--        <module name="InnerAssignment"/>-->
<!--        <module name="MissingSwitchDefault"/>-->
<!--        <module name="SimplifyBooleanExpression"/>-->
<!--        <module name="SimplifyBooleanReturn"/>-->

<!--        &lt;!&ndash; Checks for class design                         &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_design.html &ndash;&gt;-->
<!--        <module name="FinalClass"/>-->
<!--        <module name="HideUtilityClassConstructor"/>-->
<!--        <module name="InterfaceIsType"/>-->
<!--        <module name="VisibilityModifier">-->
<!--          <property name="protectedAllowed" value="true"/>-->
<!--        </module>-->


<!--        &lt;!&ndash; Miscellaneous other checks.                   &ndash;&gt;-->
<!--        &lt;!&ndash; See http://checkstyle.sf.net/config_misc.html &ndash;&gt;-->
<!--        <module name="ArrayTypeStyle"/>-->
<!--        <module name="Indentation">-->
<!--            <property name="basicOffset" value="2" />-->
<!--            <property name="caseIndent" value="0" />-->
<!--        </module> -->
<!--        &lt;!&ndash; <module name="TodoComment"/> &ndash;&gt;-->
<!--        <module name="UpperEll"/>-->

<!--    </module>-->

</module>
