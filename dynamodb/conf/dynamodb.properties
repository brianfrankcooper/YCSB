# Copyright (c) 2012 YCSB contributors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License. See accompanying
# LICENSE file.

#
# Sample property file for Amazon DynamoDB database client

## Mandatory parameters

# AWS credentials associated with your aws account.
#dynamodb.awsCredentialsFile = <path to AWSCredentials.properties>

# Primarykey of table 'usertable'
#dynamodb.primaryKey = <firstname>

# If you set dynamodb.primaryKeyType to HASH_AND_RANGE, you must specify the
# hash key name of your primary key here. (see documentation below for details)
#dynamodb.hashKeyName = <hashid>

## Optional parameters

# The property "primaryKeyType" below specifies the type of primary key
# you have setup for the test table. There are two choices:
# - HASH (default)
# - HASH_AND_RANGE
#
# When testing the DB in HASH mode (which is the default), your table's
# primary key must be of the "HASH" key type, and the name of the primary key
# is specified via the dynamodb.primaryKey property. In this mode, all
# keys from YCSB are hashed across multiple hash partitions and
# performance of individual operations are good. However, query across
# multiple items is eventually consistent in this mode and relies on the
# global secondary index.
#
#
# When testing the DB in HASH_AND_RANGE mode, your table's primary key must be
# of the "HASH_AND_RANGE" key type. You need to specify the name of the
# hash key via the "dynamodb.hashKeyName" property and you also need to
# specify the name of the range key via the "dynamodb.primaryKey" property.
# In this mode, keys supplied by YCSB will be used as the range part of
# the primary key and the hash part of the primary key will have a fixed value.
# Optionally you can designate the value used in the hash part of the primary
# key via the dynamodb.hashKeyValue.
#
# The purpose of the HASH_AND_RANGE mode is to benchmark the performance
# characteristics of a single logical hash partition. This is useful because
# so far the only practical way to do strongly consistent query is to do it
# in a single hash partition (Whole table scan can be consistent but it becomes
# less practical when the table is really large). Therefore, for users who
# really want to have strongly consistent query, it's important for them to
# know the performance capabilities of a single logical hash partition so
# they can plan their application accordingly.

#dynamodb.primaryKeyType = HASH

#Optionally you can specify a value for the hash part of the primary key
#when testing in HASH_AND_RANG mode.
#dynamodb.hashKeyValue = <some value of your choice>

# Endpoint to connect to.For best latency, it is recommended 
# to choose the endpoint which is closer to the client. 
# Default is us-east-1
#dynamodb.endpoint = http://dynamodb.us-east-1.amazonaws.com

# Strongly recommended to set to uniform.Refer FAQs in README
#requestdistribution = uniform

# Enable/disable debug messages.Defaults to false
# "true" or "false"
#dynamodb.debug = false

# Maximum number of concurrent connections
#dynamodb.connectMax = 50

# Read consistency.Consistent reads are expensive and consume twice 
# as many resources as eventually consistent reads. Defaults to false.
# "true" or "false"
#dynamodb.consistentReads = false

# Workload size has implications on provisioned read and write
# capacity units.Refer FAQs in README
#fieldcount = 10
#fieldlength = 90
